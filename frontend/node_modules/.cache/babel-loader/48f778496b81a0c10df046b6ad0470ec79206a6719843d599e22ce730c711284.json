{"ast":null,"code":"var _jsxFileName = \"/home/habil/workspace/portofolio project/web-scraping-agent/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Assuming you have an App.css\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [summary, setSummary] = useState('');\n  const [extractedData, setExtractedData] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000'; // Matches your backend port\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSummary('');\n    setExtractedData('');\n    try {\n      const response = await fetch(`${API_URL}/scrape_and_summarize/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_query: query\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setSummary(data.summary);\n        setExtractedData(data.extracted_data);\n      } else {\n        setError(data.error || 'An unknown error occurred.');\n      }\n    } catch (err) {\n      setError('Failed to connect to the backend API.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Web Scraping Agent UI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"query-input\",\n            children: \"Your Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"query-input\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"e.g., Summarize the main points of this article.\",\n            rows: \"4\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Scrape & Summarize'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), extractedData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Extracted Data (for debugging):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: extractedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AOjZ1HqIUO20mJu5O1EJYf3vuKc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","summary","setSummary","extractedData","setExtractedData","loading","setLoading","error","setError","API_URL","process","env","REACT_APP_API_URL","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","user_query","data","json","success","extracted_data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","placeholder","rows","required","type","disabled","_c","$RefreshReg$"],"sources":["/home/habil/workspace/portofolio project/web-scraping-agent/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Assuming you have an App.css\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [summary, setSummary] = useState('');\n  const [extractedData, setExtractedData] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000'; // Matches your backend port\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSummary('');\n    setExtractedData('');\n\n    try {\n      const response = await fetch(`${API_URL}/scrape_and_summarize/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ user_query: query }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setSummary(data.summary);\n        setExtractedData(data.extracted_data);\n      } else {\n        setError(data.error || 'An unknown error occurred.');\n      }\n    } catch (err) {\n      setError('Failed to connect to the backend API.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Web Scraping Agent UI</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"query-input\">Your Query:</label>\n            <textarea\n              id=\"query-input\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"e.g., Summarize the main points of this article.\"\n              rows=\"4\"\n              required\n            />\n          </div>\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Processing...' : 'Scrape & Summarize'}\n          </button>\n        </form>\n\n        {error && <p className=\"error-message\">Error: {error}</p>}\n\n        {summary && (\n          <div className=\"results\">\n            <h2>Summary:</h2>\n            <p>{summary}</p>\n            {extractedData && (\n                <>\n                    <h2>Extracted Data (for debugging):</h2>\n                    <pre>{extractedData}</pre>\n                </>\n            )}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}